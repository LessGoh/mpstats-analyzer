import streamlit as st
import pandas as pd
import numpy as np
from utils.calculator import ProductRatingCalculator
from utils.data_processor import MPStatsDataProcessor
from utils.visualizations import create_radar_chart, create_metrics_bar_chart
from data.sample_data import get_sample_data

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –Ω–∏—à MPStats",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
@st.cache_resource
def init_calculator():
    return ProductRatingCalculator()

@st.cache_resource
def init_data_processor():
    return MPStatsDataProcessor()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.title("üìä –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –Ω–∏—à MPStats")
    st.markdown("**–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ —Ç–æ–≤–∞—Ä–Ω—ã—Ö –Ω–∏—à –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö**")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Å–æ–≤
    calculator = init_calculator()
    data_processor = init_data_processor()
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    setup_sidebar(calculator)
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    tab1, tab2, tab3 = st.tabs(["üîç –ê–Ω–∞–ª–∏–∑ –Ω–∏—à–∏", "üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤", "‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"])
    
    with tab1:
        manual_analysis_tab(calculator)
    
    with tab2:
        file_upload_tab(data_processor, calculator)
    
    with tab3:
        instructions_tab()

def setup_sidebar(calculator):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏"""
    st.sidebar.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞")
    
    # –í–µ—Å–∞ –¥–ª—è –º–µ—Ç—Ä–∏–∫
    st.sidebar.subheader("–í–µ—Å–∞ –º–µ—Ç—Ä–∏–∫ (%)")
    weights = {}
    weights['demand'] = st.sidebar.slider("–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤/—Ç–æ–≤–∞—Ä—ã", 0, 100, 30)
    weights['revenue'] = st.sidebar.slider("–û–±—ä–µ–º –≤—ã—Ä—É—á–∫–∏", 0, 100, 25)
    weights['ads'] = st.sidebar.slider("–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º—ã", 0, 100, 25)
    weights['organic'] = st.sidebar.slider("–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ä–≥–∞–Ω–∏–∫–∏", 0, 100, 20)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É–º–º—ã –≤–µ—Å–æ–≤
    total_weight = sum(weights.values())
    if total_weight != 100:
        st.sidebar.warning(f"‚ö†Ô∏è –°—É–º–º–∞ –≤–µ—Å–æ–≤: {total_weight}%. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 100%")
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Å–æ–≤ –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ
    calculator.update_weights(weights)
    
    # –ü–æ—Ä–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    st.sidebar.subheader("–ü–æ—Ä–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
    thresholds = {}
    thresholds['min_revenue'] = st.sidebar.number_input(
        "–ú–∏–Ω. –≤—ã—Ä—É—á–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (‚ÇΩ/–º–µ—Å)", 
        value=1000000, 
        step=100000,
        format="%d"
    )
    thresholds['min_demand_ratio'] = st.sidebar.number_input(
        "–ú–∏–Ω. —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤/—Ç–æ–≤–∞—Ä—ã", 
        value=1.0, 
        step=0.1,
        format="%.1f"
    )
    
    calculator.update_thresholds(thresholds)
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏
    st.sidebar.markdown("---")
    st.sidebar.markdown("**–í–µ—Ä—Å–∏—è:** MVP 1.0")
    st.sidebar.markdown("**–ê–≤—Ç–æ—Ä:** AI Assistant")

def manual_analysis_tab(calculator):
    """–í–∫–ª–∞–¥–∫–∞ —Ä—É—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
    st.header("üîß –†—É—á–Ω–æ–π –≤–≤–æ–¥ –º–µ—Ç—Ä–∏–∫")
    
    col1, col2 = st.columns(2)
    
    with col1:
        demand_ratio = st.number_input(
            "–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤/—Ç–æ–≤–∞—Ä—ã", 
            value=5.2, 
            step=0.1,
            help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
        )
        revenue = st.number_input(
            "–í—ã—Ä—É—á–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (‚ÇΩ/–º–µ—Å)", 
            value=2500000, 
            step=100000,
            format="%d",
            help="–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞ –º–µ—Å—è—Ü"
        )
    
    with col2:
        price_ad_ratio = st.number_input(
            "–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/—Å—Ç–∞–≤–∫–∞", 
            value=25.0, 
            step=0.5,
            help="–û—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–π —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –∫ —Å—Ä–µ–¥–Ω–µ–π —Ä–µ–∫–ª–∞–º–Ω–æ–π —Å—Ç–∞–≤–∫–µ"
        )
        organic_percent = st.number_input(
            "–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ä–≥–∞–Ω–∏–∫–∏ (%)", 
            value=65.0, 
            step=1.0, 
            max_value=100.0,
            help="–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–∑–∏—Ü–∏–π –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã –≤ —Ç–æ–ø-100"
        )
    
    # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    col1, col2, col3 = st.columns([1, 1, 2])
    
    with col1:
        analyze_button = st.button("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", type="primary")
    
    with col2:
        sample_button = st.button("üìã –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–º–µ—Ä")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–º–µ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
    if sample_button:
        sample_data = get_sample_data()
        st.session_state.update(sample_data)
        st.rerun()
    
    # –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
    if analyze_button:
        metrics = {
            'demand_ratio': demand_ratio,
            'revenue': revenue,
            'price_ad_ratio': price_ad_ratio,
            'organic_percent': organic_percent
        }
        
        display_analysis_results(calculator, metrics)

def display_analysis_results(calculator, metrics):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞"""
    result = calculator.calculate_rating(metrics)
    
    st.header("üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–π—Ç–∏–Ω–≥
    col1, col2, col3 = st.columns([1, 2, 1])
    
    with col2:
        rating_status, rating_desc = calculator.interpret_rating(result['final_rating'])
        st.metric(
            label="üéØ –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∏—à–∏",
            value=f"{result['final_rating']}/100",
            help="–ß–µ–º –≤—ã—à–µ —Ä–µ–π—Ç–∏–Ω–≥, —Ç–µ–º –ª—É—á—à–µ –Ω–∏—à–∞ –¥–ª—è –≤—Ö–æ–¥–∞"
        )
        st.info(f"{rating_status}: {rating_desc}")
    
    # –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º
    display_metrics_breakdown(result, metrics)
    
    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
    display_visualizations(result)
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    display_recommendations(result)

def display_metrics_breakdown(result, metrics):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º"""
    st.subheader("üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º")
    
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric(
            "–°–ø—Ä–æ—Å/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
            f"{result['breakdown']['demand']}/100",
            help=f"–í—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {metrics['demand_ratio']}"
        )
    
    with col2:
        st.metric(
            "–í—ã—Ä—É—á–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
            f"{result['breakdown']['revenue']}/100",
            help=f"–í—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {metrics['revenue']:,} ‚ÇΩ"
        )
    
    with col3:
        st.metric(
            "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º—ã",
            f"{result['breakdown']['ad_efficiency']}/100",
            help=f"–í—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {metrics['price_ad_ratio']}"
        )
    
    with col4:
        st.metric(
            "–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ä–≥–∞–Ω–∏–∫–∏",
            f"{result['breakdown']['organic']}/100",
            help=f"–í—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {metrics['organic_percent']}%"
        )

def display_visualizations(result):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π"""
    st.subheader("üìà –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è")
    
    col1, col2 = st.columns(2)
    
    with col1:
        # –†–∞–¥–∞—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞
        radar_fig = create_radar_chart(result['breakdown'])
        st.plotly_chart(radar_fig, use_container_width=True)
    
    with col2:
        # –°—Ç–æ–ª–±—á–∞—Ç–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞
        bar_fig = create_metrics_bar_chart(result)
        st.plotly_chart(bar_fig, use_container_width=True)

def display_recommendations(result):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
    st.subheader("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    
    recommendations = []
    
    if result['breakdown']['demand'] < 40:
        recommendations.append("‚ö†Ô∏è –ù–∏–∑–∫–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å–ø—Ä–æ—Å–∞ –∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –±–æ–ª–µ–µ —É–∑–∫—É—é –Ω–∏—à—É.")
    
    if result['breakdown']['revenue'] < 30:
        recommendations.append("‚ö†Ô∏è –ù–∏–∑–∫–∞—è –≤—ã—Ä—É—á–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å –∏–ª–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é.")
    
    if result['breakdown']['ad_efficiency'] < 40:
        recommendations.append("‚ö†Ô∏è –ù–∏–∑–∫–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º—ã. –í—ã—Å–æ–∫–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞.")
    
    if result['breakdown']['organic'] < 50:
        recommendations.append("‚ö†Ô∏è –ú–∞–ª–æ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö –ø–æ–∑–∏—Ü–∏–π. –í—ã—Å–æ–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è –≤ —Ä–µ–∫–ª–∞–º–µ.")
    
    if not recommendations:
        recommendations.append("‚úÖ –ù–∏—à–∞ –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –≤—Ö–æ–¥–∞!")
    
    for rec in recommendations:
        st.write(rec)

def file_upload_tab(data_processor, calculator):
    """–í–∫–ª–∞–¥–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤"""
    st.header("üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ MPStats")
    
    uploaded_files = st.file_uploader(
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç—á–µ—Ç—ã MPStats",
        accept_multiple_files=True,
        type=['xlsx', 'csv'],
        help="–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–∞–π–ª—ã: –í—ã–±–æ—Ä –Ω–∏—à–∏, SEO —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –û—Ç—á–µ—Ç –ø–æ –±—Ä–µ–Ω–¥–∞–º"
    )
    
    if uploaded_files:
        st.subheader("üìÑ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã")
        
        for file in uploaded_files:
            with st.expander(f"üìÑ {file.name}"):
                try:
                    # –ü–æ–ø—ã—Ç–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
                    file_info = data_processor.analyze_file(file)
                    st.write(f"**–¢–∏–ø —Ñ–∞–π–ª–∞:** {file_info['type']}")
                    st.write(f"**–°—Ç—Ä–æ–∫:** {file_info['rows']}")
                    st.write(f"**–°—Ç–æ–ª–±—Ü–æ–≤:** {file_info['columns']}")
                    
                    if file_info['preview']:
                        st.write("**–ü—Ä–µ–≤—å—é –¥–∞–Ω–Ω—ã—Ö:**")
                        st.dataframe(file_info['preview'])
                
                except Exception as e:
                    st.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞: {str(e)}")
        
        # –ö–Ω–æ–ø–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
        if st.button("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"):
            st.info("üöß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏")

def instructions_tab():
    """–í–∫–ª–∞–¥–∫–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏"""
    st.header("‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    
    st.markdown("""
    ## üìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã MPStats:
    
    1. **WB –í—ã–±–æ—Ä –Ω–∏—à–∏** - –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ–±—ä–µ–º–∞ –≤—ã—Ä—É—á–∫–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤
    2. **SEO –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞** - –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫ –∏ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏—Ö –ø–æ–∑–∏—Ü–∏–π
    3. **–û—Ç—á–µ—Ç –ø–æ –±—Ä–µ–Ω–¥–∞–º** - –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º
    
    ## üéØ –ú–µ—Ç—Ä–∏–∫–∏ –∞–Ω–∞–ª–∏–∑–∞:
    
    ### 1. –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤/—Ç–æ–≤–∞—Ä—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30%)
    - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å –Ω–∏—à–∏
    - –í—ã—Å–æ–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ = –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –º–∞–ª–æ —Ç–æ–≤–∞—Ä–æ–≤ = —Ö–æ—Ä–æ—à–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
    
    ### 2. –û–±—ä–µ–º –≤—ã—Ä—É—á–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 25%)
    - –§–∏–ª—å—Ç—Ä –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –≤—ã—Ä—É—á–∫–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1M ‚ÇΩ/–º–µ—Å)
    - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∂–∏–∑–Ω–µ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∏ —Ä–∞–∑–º–µ—Ä –Ω–∏—à–∏
    
    ### 3. –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 25%)
    - –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –∫ —Ä–µ–∫–ª–∞–º–Ω–æ–π —Å—Ç–∞–≤–∫–µ
    - –í—ã—Å–æ–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ = –Ω–∏–∑–∫–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ü–µ–Ω—ã
    
    ### 4. –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ä–≥–∞–Ω–∏–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 20%)
    - –î–æ–ª—è –ø–æ–∑–∏—Ü–∏–π –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã –≤ —Ç–æ–ø-100
    - –í—ã—Å–æ–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ = –ø—Ä–æ—â–µ –≤–æ–π—Ç–∏ –≤ –Ω–∏—à—É –±–µ–∑ –±–æ–ª—å—à–∏—Ö —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –±—é–¥–∂–µ—Ç–æ–≤
    
    ## üéöÔ∏è –®–∫–∞–ª–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤:
    
    - **80-100**: üü¢ –û—Ç–ª–∏—á–Ω–∞—è –Ω–∏—à–∞ - –Ω–∏–∑–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è, –≤—ã—Å–æ–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª
    - **60-79**: üü° –•–æ—Ä–æ—à–∞—è –Ω–∏—à–∞ - —É–º–µ—Ä–µ–Ω–Ω–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è, —Ö–æ—Ä–æ—à–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª
    - **40-59**: üü† –°—Ä–µ–¥–Ω—è—è –Ω–∏—à–∞ - –≤—ã—Å–æ–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è, —Å—Ä–µ–¥–Ω–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª
    - **0-39**: üî¥ –ü–ª–æ—Ö–∞—è –Ω–∏—à–∞ - –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è, –Ω–∏–∑–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª
    
    ## üöÄ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
    
    1. **–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–µ—Å–∞ –º–µ—Ç—Ä–∏–∫** –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –≤–∞—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º
    2. **–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é** –Ω–∞ –≤–∫–ª–∞–¥–∫–µ "–ê–Ω–∞–ª–∏–∑ –Ω–∏—à–∏" –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã
    3. **–ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥** —Å –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
    4. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏** –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è –æ –≤—Ö–æ–¥–µ –≤ –Ω–∏—à—É
    
    ## üí° –°–æ–≤–µ—Ç—ã:
    
    - –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –≤–µ—Å–æ–≤ –¥–ª—è –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π
    - –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∏—à –ø–µ—Ä–µ–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º —Ä–µ—à–µ–Ω–∏—è
    - –£—á–∏—Ç—ã–≤–∞–π—Ç–µ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç—å –∏ —Ç—Ä–µ–Ω–¥—ã —Ä—ã–Ω–∫–∞
    - –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å
    """)

if __name__ == "__main__":
    main()
